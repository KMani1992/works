/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jxtable;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.regex.PatternSyntaxException;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jdesktop.swingx.decorator.ColorHighlighter;
import org.jdesktop.swingx.decorator.HighlightPredicate;
import org.jdesktop.swingx.decorator.HighlighterFactory;

/**
 *
 * @author mani
 */
public class Search extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        JXTable("Search");
    }
    
    
    public void JXTable(String title) throws HeadlessException {
        this.setTitle(title);

        SecureRandom random = new SecureRandom();
        final String[][] model = new String[30][2];

        for (int j = 0; j < 30; j++) {
            for (int i = 0; i < 2; i++) {
                model[j][i] = new BigInteger(130, random).toString(32);
            }
        }
        TableModel dataModel = new
                AbstractTableModel() {
                    public int getColumnCount() {
                        return 2;
                    }

                    public int getRowCount() {
                        return 30;
                    }

                    public Object getValueAt(int row, int col) {
                        return model[row][col];
                    }
                };

//    Comment this code to add table dynamically
//    table.setModel(dataModel);

//    Uncomment this code to add table dynamically:
        final TableRowSorter<TableModel> sorter =
                new TableRowSorter<TableModel>(dataModel);

        org.jdesktop.swingx.JXTable myTable = new org.jdesktop.swingx.JXTable(dataModel);
        myTable.setColumnControlVisible(true);
        // To auto-hide a column
        // myTable.getColumnExt("B").setVisible(false);
        myTable.setRowSorter(sorter);
        
        

        // Set lookup listener
        txtSearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                try {
                    String lookupFieldText = txtSearch.getText();
                    if (lookupFieldText.length() == 0)
                        sorter.setRowFilter(null);
                    else
                        sorter.setRowFilter(RowFilter.regexFilter(lookupFieldText,0));
                } catch (PatternSyntaxException pse) {
                    System.err.println("Incorrect pattern syntax");
                }
            }
        });

        // Customize
        myTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        myTable.addHighlighter(new ColorHighlighter(HighlightPredicate.ROLLOVER_ROW, null, Color.GREEN));
        myTable.setPreferredScrollableViewportSize(new Dimension(400, 100));
        scrollTab.setViewportView(myTable);

        
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
//    HighlighterPipeline highlighters = new HighlighterPipeline();
//highlighters.addHighlighter(new AlternateRowHighlighter());
//PatternHighlighter pattern = new PatternHighlighter();
//pattern.setPattern(".*Final.*", 0);
//pattern.setBackground(Color.BLUE);
//pattern.setForeground(Color.WHITE);
//highlighters.addHighlighter(pattern);
//table.setHighlighters(highlighters);
    
    
//    Filter[] filterArray = { new PatternFilter("(.*1st.*)|(.*Final.*)", 0, 0) };
//FilterPipeline filters = new FilterPipeline(filterArray);
//table.setFilters(filters);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollTab = new javax.swing.JScrollPane();
        panSearch = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(scrollTab, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Search");
        panSearch.add(jLabel1);

        txtSearch.setColumns(5);
        panSearch.add(txtSearch);

        getContentPane().add(panSearch, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panSearch;
    private javax.swing.JScrollPane scrollTab;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
